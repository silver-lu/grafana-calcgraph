{"version":3,"sources":["../../src/graph.js"],"names":["$","_","moment","kbn","tickStep","appEvents","coreModule","GraphTooltip","ThresholdManager","EventManager","convertValuesToHistogram","getSeriesValues","directive","$rootScope","timeSrv","popoverSrv","restrict","template","link","scope","elem","ctrl","dashboard","panel","annotations","data","plot","sortedSeries","legendSideLastValue","rootScope","$root","panelWidth","eventManager","thresholdManager","tooltip","events","on","destroy","renderData","render_panel","evt","sharedTooltipModeEnabled","id","otherPanelInFullscreenMode","show","pos","event","info","clear","getLegendHeight","panelHeight","legend","rightSide","alignAsTable","legendSeries","filter","series","hideFromLegend","total","length","Math","min","floor","setElementHeight","height","css","e","console","log","shouldAbortRender","drawHook","yaxis","getYAxes","i","axis","formater","valueFormats","yaxes","format","isNumber","decimals","updateLegendValues","tickDecimals","scaledDecimals","$$phase","$digest","label","yaxisLabel","text","appendTo","rightLabel","draw","processOffsetHook","gridMargin","left","right","panelOptions","options","max","getMinTimeStepOfSeries","Number","MAX_VALUE","stats","timeStep","bars","width","prepare","dashes","lines","stack","hooks","processOffset","stackpercent","percentage","zero","fill","translateFillOption","lineWidth","linewidth","steps","steppedLine","dashLength","spaceLength","barWidth","points","fillColor","radius","pointradius","shadowSize","xaxis","grid","minBorderMargin","markings","backgroundColor","borderWidth","hoverable","clickable","color","margin","selection","mode","crosshair","getFlotPairs","nullPointMode","hiddenSeries","alias","align","values","addXSeriesAxis","bucketSize","histMin","map","s","histMax","ticks","buckets","histogram","addXHistogramAxis","addXTableAxis","addTimeAxis","addFlotOptions","addFlotEvents","configureAxisOptions","sortBy","zindex","callPlot","incrementRenderCounter","renderError","error","inspector","message","renderingCompleted","shouldDelayDraw","setTimeout","isUndefined","range","from","valueOf","to","timezone","getTimezone","timeformat","time_format","index","defaultTicks","point","ticks_num","ceil","push","configureAxisMode","seriesIndex","datapoints","pointIndex","tickIndex","flatten","defaults","position","logBase","toNumber","find","secondY","clone","applyLogScale","minSetToZero","MIN_VALUE","logmin","transform","v","inverseTransform","pow","isFinite","generateTicksForLogScaleYAxis","unshift","decimalPlaces","nextTick","maxNumTicks","numTicks","factor","num","toString","split","tickFormatter","val","secPerTick","oneDay","oneYear","bind","ranges","ctrlKey","metaKey","$apply","setTime","utc","item","isRangeSelection","x","x1","$on","off","remove"],"mappings":"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","file":"graph.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport 'jquery.flot';\nimport 'jquery.flot.selection';\nimport 'jquery.flot.time';\nimport 'jquery.flot.stack';\nimport 'jquery.flot.stackpercent';\nimport 'jquery.flot.fillbelow';\nimport 'jquery.flot.crosshair';\nimport 'jquery.flot.dashes';\nimport './jquery_flot_events';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport {tickStep} from 'app/core/utils/ticks';\nimport {appEvents, coreModule} from 'app/core/core';\nimport GraphTooltip from './graph_tooltip';\nimport {ThresholdManager} from './threshold_manager';\nimport {EventManager} from 'app/features/annotations/all';\nimport {convertValuesToHistogram, getSeriesValues} from './histogram';\n\ncoreModule.directive('grafanaGraph', function($rootScope, timeSrv, popoverSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: function(scope, elem) {\n      var ctrl = scope.ctrl;\n      var dashboard = ctrl.dashboard;\n      var panel = ctrl.panel;\n      var annotations = [];\n      var data;\n      var plot;\n      var sortedSeries;\n      var legendSideLastValue = null;\n      var rootScope = scope.$root;\n      var panelWidth = 0;\n      var eventManager = new EventManager(ctrl, elem, popoverSrv);\n      var thresholdManager = new ThresholdManager(ctrl);\n      var tooltip = new GraphTooltip(elem, dashboard, scope, function() {\n        return sortedSeries;\n      });\n\n      // panel events\n      ctrl.events.on('panel-teardown', () => {\n        thresholdManager = null;\n\n        if (plot) {\n          plot.destroy();\n          plot = null;\n        }\n      });\n\n      ctrl.events.on('render', function(renderData) {\n        data = renderData || data;\n        if (!data) {\n          return;\n        }\n        annotations = ctrl.annotations || [];\n        render_panel();\n      });\n\n      // global events\n      appEvents.on('graph-hover', function(evt) {\n        // ignore other graph hover events if shared tooltip is disabled\n        if (!dashboard.sharedTooltipModeEnabled()) {\n          return;\n        }\n\n        // ignore if we are the emitter\n        if (!plot || evt.panel.id === panel.id || ctrl.otherPanelInFullscreenMode()) {\n          return;\n        }\n\n        tooltip.show(evt.pos);\n      }, scope);\n\n      appEvents.on('graph-hover-clear', function(event, info) {\n        if (plot) {\n          tooltip.clear(plot);\n        }\n      }, scope);\n\n      function getLegendHeight(panelHeight) {\n        if (!panel.legend.show || panel.legend.rightSide) {\n          return 0;\n        }\n\n        if (panel.legend.alignAsTable) {\n          var legendSeries = _.filter(data, function(series) {\n            return series.hideFromLegend(panel.legend) === false;\n          });\n          var total = 23 + (21 * legendSeries.length);\n          return Math.min(total, Math.floor(panelHeight/2));\n        } else {\n          return 26;\n        }\n      }\n\n      function setElementHeight() {\n        try {\n          var height = ctrl.height - getLegendHeight(ctrl.height);\n          elem.css('height', height + 'px');\n\n          return true;\n        } catch (e) { // IE throws errors sometimes\n          console.log(e);\n          return false;\n        }\n      }\n\n      function shouldAbortRender() {\n        if (!data) {\n          return true;\n        }\n\n        if (!setElementHeight()) { return true; }\n\n        if (panelWidth === 0) {\n          return true;\n        }\n      }\n\n      function drawHook(plot) {\n        // Update legend values\n        var yaxis = plot.getYAxes();\n        for (var i = 0; i < data.length; i++) {\n          var series = data[i];\n          var axis = yaxis[series.yaxis - 1];\n          var formater = kbn.valueFormats[panel.yaxes[series.yaxis - 1].format];\n\n          // decimal override\n          if (_.isNumber(panel.decimals)) {\n            series.updateLegendValues(formater, panel.decimals, null);\n          } else {\n            // auto decimals\n            // legend and tooltip gets one more decimal precision\n            // than graph legend ticks\n            var tickDecimals = (axis.tickDecimals || -1) + 1;\n            series.updateLegendValues(formater, tickDecimals, axis.scaledDecimals + 2);\n          }\n\n          if (!rootScope.$$phase) { scope.$digest(); }\n        }\n\n        // add left axis labels\n        if (panel.yaxes[0].label && panel.yaxes[0].show) {\n          var yaxisLabel = $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n          .text(panel.yaxes[0].label)\n          .appendTo(elem);\n        }\n\n        // add right axis labels\n        if (panel.yaxes[1].label && panel.yaxes[1].show) {\n          var rightLabel = $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n          .text(panel.yaxes[1].label)\n          .appendTo(elem);\n        }\n\n        thresholdManager.draw(plot);\n      }\n\n      function processOffsetHook(plot, gridMargin) {\n        var left = panel.yaxes[0];\n        var right = panel.yaxes[1];\n        if (left.show && left.label) { gridMargin.left = 20; }\n        if (right.show && right.label) { gridMargin.right = 20; }\n\n        // apply y-axis min/max options\n        var yaxis = plot.getYAxes();\n        for (var i = 0; i < yaxis.length; i++) {\n          var axis = yaxis[i];\n          var panelOptions = panel.yaxes[i];\n          axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n          axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n        }\n      }\n\n      // Series could have different timeSteps,\n      // let's find the smallest one so that bars are correctly rendered.\n      // In addition, only take series which are rendered as bars for this.\n      function getMinTimeStepOfSeries(data) {\n        var min = Number.MAX_VALUE;\n\n        for (let i = 0; i < data.length; i++) {\n          if (!data[i].stats.timeStep) {\n            continue;\n          }\n          if (panel.bars) {\n            if (data[i].bars && data[i].bars.show === false) {\n              continue;\n            }\n          } else {\n            if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n              continue;\n            }\n          }\n\n          if (data[i].stats.timeStep < min) {\n            min = data[i].stats.timeStep;\n          }\n        }\n\n        return min;\n      }\n\n      // Function for rendering panel\n      function render_panel() {\n        panelWidth =  elem.width();\n\n        if (shouldAbortRender()) {\n          return;\n        }\n\n        // give space to alert editing\n        thresholdManager.prepare(elem, data);\n\n        // un-check dashes if lines are unchecked\n        panel.dashes = panel.lines ? panel.dashes : false;\n\n        var stack = panel.stack ? true : null;\n\n        // Populate element\n        var options = {\n          hooks: {\n            draw: [drawHook],\n            processOffset: [processOffsetHook],\n          },\n          legend: { show: false },\n          series: {\n            stackpercent: panel.stack ? panel.percentage : false,\n            stack: panel.percentage ? null : stack,\n            lines:  {\n              show: panel.lines,\n              zero: false,\n              fill: translateFillOption(panel.fill),\n              lineWidth: panel.dashes ? 0 : panel.linewidth,\n              steps: panel.steppedLine\n            },\n            dashes: {\n              show: panel.dashes,\n              lineWidth: panel.linewidth,\n              dashLength: [panel.dashLength, panel.spaceLength]\n            },\n            bars: {\n              show: panel.bars,\n              fill: 1,\n              barWidth: 1,\n              zero: false,\n              lineWidth: 0\n            },\n            points: {\n              show: panel.points,\n              fill: 1,\n              fillColor: false,\n              radius: panel.points ? panel.pointradius : 2\n            },\n            shadowSize: 0\n          },\n          yaxes: [],\n          xaxis: {},\n          grid: {\n            minBorderMargin: 0,\n            markings: [],\n            backgroundColor: null,\n            borderWidth: 0,\n            hoverable: true,\n            clickable: true,\n            color: '#c8c8c8',\n            margin: { left: 0, right: 0 },\n          },\n          selection: {\n            mode: \"x\",\n            color: '#666'\n          },\n          crosshair: {\n            mode: 'x'\n          }\n        };\n\n        for (let i = 0; i < data.length; i++) {\n          let series = data[i];\n          series.data = series.getFlotPairs(series.nullPointMode || panel.nullPointMode);\n\n          // if hidden remove points and disable stack\n          if (ctrl.hiddenSeries[series.alias]) {\n            series.data = [];\n            series.stack = false;\n          }\n        }\n\n        switch (panel.xaxis.mode) {\n          case 'series': {\n            options.series.bars.barWidth = 0.7;\n            options.series.bars.align = 'center';\n\n            for (let i = 0; i < data.length; i++) {\n              let series = data[i];\n              series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n            }\n\n            addXSeriesAxis(options);\n            break;\n          }\n          case 'histogram': {\n            let bucketSize;\n            let values = getSeriesValues(data);\n\n            if (data.length && values.length) {\n              let histMin = _.min(_.map(data, s => s.stats.min));\n              let histMax = _.max(_.map(data, s => s.stats.max));\n              let ticks = panel.xaxis.buckets || panelWidth / 50;\n              bucketSize = tickStep(histMin, histMax, ticks);\n              let histogram = convertValuesToHistogram(values, bucketSize);\n\n              data[0].data = histogram;\n              data[0].alias = data[0].label = data[0].id = \"count\";\n              data = [data[0]];\n\n              options.series.bars.barWidth = bucketSize * 0.8;\n            } else {\n              bucketSize = 0;\n            }\n\n            addXHistogramAxis(options, bucketSize);\n            break;\n          }\n          case 'table': {\n            options.series.bars.barWidth = 0.7;\n            options.series.bars.align = 'center';\n            addXTableAxis(options);\n            break;\n          }\n          default: {\n            options.series.bars.barWidth = getMinTimeStepOfSeries(data) / 1.5;\n            addTimeAxis(options);\n            break;\n          }\n        }\n\n        thresholdManager.addFlotOptions(options, panel);\n        eventManager.addFlotEvents(annotations, options);\n        configureAxisOptions(data, options);\n\n        sortedSeries = _.sortBy(data, function(series) { return series.zindex; });\n\n        function callPlot(incrementRenderCounter) {\n          try {\n            plot = $.plot(elem, sortedSeries, options);\n            if (ctrl.renderError) {\n              delete ctrl.error;\n              delete ctrl.inspector;\n            }\n          } catch (e) {\n            console.log('flotcharts error', e);\n            ctrl.error = e.message || \"Render Error\";\n            ctrl.renderError = true;\n            ctrl.inspector = {error: e};\n          }\n\n          if (incrementRenderCounter) {\n            ctrl.renderingCompleted();\n          }\n        }\n\n        if (shouldDelayDraw(panel)) {\n          // temp fix for legends on the side, need to render twice to get dimensions right\n          callPlot(false);\n          setTimeout(function() { callPlot(true); }, 50);\n          legendSideLastValue = panel.legend.rightSide;\n        } else {\n          callPlot(true);\n        }\n      }\n\n      function translateFillOption(fill) {\n        return fill === 0 ? 0.001 : fill/10;\n      }\n\n      function shouldDelayDraw(panel) {\n        if (panel.legend.rightSide) {\n          return true;\n        }\n        if (legendSideLastValue !== null && panel.legend.rightSide !== legendSideLastValue) {\n          return true;\n        }\n      }\n\n      function addTimeAxis(options) {\n        var ticks = panelWidth / 100;\n        var min = _.isUndefined(ctrl.range.from) ? null : ctrl.range.from.valueOf();\n        var max = _.isUndefined(ctrl.range.to) ? null : ctrl.range.to.valueOf();\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: \"time\",\n          min: min,\n          max: max,\n          label: \"Datetime\",\n          ticks: ticks,\n          timeformat: time_format(ticks, min, max),\n        };\n      }\n\n      function addXSeriesAxis(options) {\n        var ticks = _.map(data, function(series, index) {\n          return [index + 1, series.alias];\n        });\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: 0,\n          max: ticks.length + 1,\n          label: \"Datetime\",\n          ticks: ticks\n        };\n      }\n\n      function addXHistogramAxis(options, bucketSize) {\n        let ticks, min, max;\n        let defaultTicks = panelWidth / 50;\n\n        if (data.length && bucketSize) {\n          ticks = _.map(data[0].data, point => point[0]);\n          min = _.min(ticks);\n          max = _.max(ticks);\n\n          // Adjust tick step\n          let tickStep = bucketSize;\n          let ticks_num = Math.floor((max - min) / tickStep);\n          while (ticks_num > defaultTicks) {\n            tickStep = tickStep * 2;\n            ticks_num = Math.ceil((max - min) / tickStep);\n          }\n\n          // Expand ticks for pretty view\n          min = Math.floor(min / tickStep) * tickStep;\n          max = Math.ceil(max / tickStep) * tickStep;\n\n          ticks = [];\n          for (let i = min; i <= max; i += tickStep) {\n            ticks.push(i);\n          }\n        } else {\n          // Set defaults if no data\n          ticks = defaultTicks / 2;\n          min = 0;\n          max = 1;\n        }\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: min,\n          max: max,\n          label: \"Histogram\",\n          ticks: ticks\n        };\n\n        // Use 'short' format for histogram values\n        configureAxisMode(options.xaxis, 'short');\n      }\n\n      function addXTableAxis(options) {\n        var ticks = _.map(data, function(series, seriesIndex) {\n          return _.map(series.datapoints, function(point, pointIndex) {\n            var tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n            return [tickIndex + 1, point[1]];\n          });\n        });\n        ticks = _.flatten(ticks, true);\n\n        options.xaxis = {\n          timezone: dashboard.getTimezone(),\n          show: panel.xaxis.show,\n          mode: null,\n          min: 0,\n          max: ticks.length + 1,\n          label: \"Datetime\",\n          ticks: ticks\n        };\n      }\n\n      function configureAxisOptions(data, options) {\n        var defaults = {\n          position: 'left',\n          show: panel.yaxes[0].show,\n          index: 1,\n          logBase: panel.yaxes[0].logBase || 1,\n          min: panel.yaxes[0].min ? _.toNumber(panel.yaxes[0].min) : null,\n          max: panel.yaxes[0].max ? _.toNumber(panel.yaxes[0].max) : null,\n        };\n\n        options.yaxes.push(defaults);\n\n        if (_.find(data, {yaxis: 2})) {\n          var secondY = _.clone(defaults);\n          secondY.index = 2;\n          secondY.show = panel.yaxes[1].show;\n          secondY.logBase = panel.yaxes[1].logBase || 1;\n          secondY.position = 'right';\n          secondY.min = panel.yaxes[1].min ? _.toNumber(panel.yaxes[1].min) : null;\n          secondY.max = panel.yaxes[1].max ? _.toNumber(panel.yaxes[1].max) : null;\n          options.yaxes.push(secondY);\n\n          applyLogScale(options.yaxes[1], data);\n          configureAxisMode(options.yaxes[1], panel.percentage && panel.stack ? \"percent\" : panel.yaxes[1].format);\n        }\n        applyLogScale(options.yaxes[0], data);\n        configureAxisMode(options.yaxes[0], panel.percentage && panel.stack ? \"percent\" : panel.yaxes[0].format);\n      }\n\n      function applyLogScale(axis, data) {\n        if (axis.logBase === 1) {\n          return;\n        }\n\n        const minSetToZero = axis.min === 0;\n\n        if (axis.min < Number.MIN_VALUE) {\n          axis.min = null;\n        }\n        if (axis.max < Number.MIN_VALUE) {\n          axis.max = null;\n        }\n\n        var series, i;\n        var max = axis.max, min = axis.min;\n\n        for (i = 0; i < data.length; i++) {\n          series = data[i];\n          if (series.yaxis === axis.index) {\n            if (!max || max < series.stats.max) {\n              max = series.stats.max;\n            }\n            if (!min || min > series.stats.logmin) {\n              min = series.stats.logmin;\n            }\n          }\n        }\n\n        axis.transform = function(v) { return (v < Number.MIN_VALUE) ? null : Math.log(v) / Math.log(axis.logBase); };\n        axis.inverseTransform  = function (v) { return Math.pow(axis.logBase,v); };\n\n        if (!max && !min) {\n          max = axis.inverseTransform(+2);\n          min = axis.inverseTransform(-2);\n        } else if (!max) {\n          max = min*axis.inverseTransform(+4);\n        } else if (!min) {\n          min = max*axis.inverseTransform(-4);\n        }\n\n        if (axis.min) {\n          min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n        } else {\n          min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n        }\n        if (axis.max) {\n          max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n        } else {\n          max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n        }\n\n        if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n          return;\n        }\n\n        if (Number.isFinite(min) && Number.isFinite(max)) {\n          if (minSetToZero) {\n            axis.min = 0.1;\n            min = 1;\n          }\n\n          axis.ticks = generateTicksForLogScaleYAxis(min, max, axis.logBase);\n          if (minSetToZero) {\n            axis.ticks.unshift(0.1);\n          }\n          if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n            axis.max = axis.ticks[axis.ticks.length - 1];\n          }\n          axis.tickDecimals = decimalPlaces(min);\n        } else {\n          axis.ticks = [1, 2];\n          delete axis.min;\n          delete axis.max;\n        }\n      }\n\n      function generateTicksForLogScaleYAxis(min, max, logBase) {\n        let ticks = [];\n\n        var nextTick;\n        for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n          ticks.push(nextTick);\n        }\n\n        const maxNumTicks = Math.ceil(ctrl.height/25);\n        const numTicks = ticks.length;\n        if (numTicks > maxNumTicks) {\n          const factor = Math.ceil(numTicks/maxNumTicks) * logBase;\n          ticks = [];\n\n          for (nextTick = min; nextTick <= (max * factor); nextTick *= factor) {\n            ticks.push(nextTick);\n          }\n        }\n\n        return ticks;\n      }\n\n      function decimalPlaces(num) {\n        if (!num) { return 0; }\n\n        return (num.toString().split('.')[1] || []).length;\n      }\n\n      function configureAxisMode(axis, format) {\n        axis.tickFormatter = function(val, axis) {\n          return kbn.valueFormats[format](val, axis.tickDecimals, axis.scaledDecimals);\n        };\n      }\n\n      function time_format(ticks, min, max) {\n        if (min && max && ticks) {\n          var range = max - min;\n          var secPerTick = (range/ticks) / 1000;\n          var oneDay = 86400000;\n          var oneYear = 31536000000;\n\n          if (secPerTick <= 45) {\n            return \"%H:%M:%S\";\n          }\n          if (secPerTick <= 7200 || range <= oneDay) {\n            return \"%H:%M\";\n          }\n          if (secPerTick <= 80000) {\n            return \"%m/%d %H:%M\";\n          }\n          if (secPerTick <= 2419200 || range <= oneYear) {\n            return \"%m/%d\";\n          }\n          return \"%Y-%m\";\n        }\n\n        return \"%H:%M\";\n      }\n\n      elem.bind(\"plotselected\", function (event, ranges) {\n        if (ranges.ctrlKey || ranges.metaKey)  {\n          // scope.$apply(() => {\n          //   eventManager.updateTime(ranges.xaxis);\n          // });\n        } else {\n          scope.$apply(function() {\n            timeSrv.setTime({\n              from  : moment.utc(ranges.xaxis.from),\n              to    : moment.utc(ranges.xaxis.to),\n            });\n          });\n        }\n      });\n\n      elem.bind(\"plotclick\", function (event, pos, item) {\n        if (pos.ctrlKey || pos.metaKey || eventManager.event)  {\n          // Skip if range selected (added in \"plotselected\" event handler)\n          let isRangeSelection = pos.x !== pos.x1;\n          if (!isRangeSelection) {\n            // scope.$apply(() => {\n            //   eventManager.updateTime({from: pos.x, to: null});\n            // });\n          }\n        }\n      });\n\n      scope.$on('$destroy', function() {\n        tooltip.destroy();\n        elem.off();\n        elem.remove();\n      });\n    }\n  };\n});\n"]}