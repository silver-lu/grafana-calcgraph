{"version":3,"sources":["../../src/thresholds_form.js"],"names":["_","coreModule","ThresholdFormCtrl","$scope","panel","panelCtrl","alert","disabled","unbindDestroy","$on","editingThresholds","render","thresholds","push","value","undefined","colorMode","op","fill","line","index","splice","template","directive","restrict","controller","bindToController","controllerAs","scope"],"mappings":";;;;;;;;;;;;;;;AAGOA,O;;AACAC,gB;;;;;;;;;;;;;;;;;;;;;mCAEMC,iB;;AAEX;AACA,mCAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,eAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeD,KAA5B;;AAEA,cAAI,KAAKA,KAAL,CAAWE,KAAf,EAAsB;AACpB,iBAAKC,QAAL,GAAgB,IAAhB;AACD;;AAED,cAAIC,gBAAgBL,OAAOM,GAAP,CAAW,UAAX,EAAuB,YAAM;AAC/C,kBAAKJ,SAAL,CAAeK,iBAAf,GAAmC,KAAnC;AACA,kBAAKL,SAAL,CAAeM,MAAf;AACAH;AACD,WAJmB,CAApB;;AAMA,eAAKH,SAAL,CAAeK,iBAAf,GAAmC,IAAnC;AACD;;;;yCAEc;AACb,iBAAKN,KAAL,CAAWQ,UAAX,CAAsBC,IAAtB,CAA2B,EAACC,OAAOC,SAAR,EAAmBC,WAAW,UAA9B,EAA0CC,IAAI,IAA9C,EAAoDC,MAAM,IAA1D,EAAgEC,MAAM,IAAtE,EAA3B;AACA,iBAAKd,SAAL,CAAeM,MAAf;AACD;;;0CAEeS,K,EAAO;AACrB,iBAAKhB,KAAL,CAAWQ,UAAX,CAAsBS,MAAtB,CAA6BD,KAA7B,EAAoC,CAApC;AACA,iBAAKf,SAAL,CAAeM,MAAf;AACD;;;mCAEQ;AACP,iBAAKN,SAAL,CAAeM,MAAf;AACD;;;;;;;;AAGCW,c;;;AAsEJrB,iBAAWsB,SAAX,CAAqB,oBAArB,EAA2C,YAAW;AACpD,eAAO;AACLC,oBAAU,GADL;AAELF,oBAAUA,QAFL;AAGLG,sBAAYvB,iBAHP;AAILwB,4BAAkB,IAJb;AAKLC,wBAAc,MALT;AAMLC,iBAAO;AACLvB,uBAAW;AADN;AANF,SAAP;AAUD,OAXD","file":"thresholds_form.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\n\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n\nexport class ThresholdFormCtrl {\n\n  /** @ngInject */\n  constructor($scope) {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert) {\n      this.disabled = true;\n    }\n\n    var unbindDestroy = $scope.$on(\"$destroy\", () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({value: undefined, colorMode: \"critical\", op: 'gt', fill: true, line: true});\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n}\n\nvar template = `\n<div class=\"gf-form-group\">\n  <h5>Thresholds</h5>\n  <p class=\"muted\" ng-show=\"ctrl.disabled\">\n    Visual thresholds options <strong>disabled.</strong>\n    Visit the Alert tab update your thresholds. <br>\n    To re-enable thresholds, the alert rule must be deleted from this panel.\n  </p>\n  <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n    <div class=\"gf-form-inline\" ng-repeat=\"threshold in ctrl.panel.thresholds\">\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">T{{$index+1}}</label>\n      </div>\n\n      <div class=\"gf-form\">\n        <div class=\"gf-form-select-wrapper\">\n          <select class=\"gf-form-input\" ng-model=\"threshold.op\"\n                  ng-options=\"f for f in ['gt', 'lt']\" ng-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></select>\n        </div>\n        <input type=\"number\" ng-model=\"threshold.value\" class=\"gf-form-input width-8\"\n               ng-change=\"ctrl.render()\" placeholder=\"value\" ng-disabled=\"ctrl.disabled\">\n      </div>\n\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">Color</label>\n        <div class=\"gf-form-select-wrapper\">\n          <select class=\"gf-form-input\" ng-model=\"threshold.colorMode\"\n                  ng-options=\"f for f in ['custom', 'critical', 'warning', 'ok']\" ng-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\">\n          </select>\n        </div>\n      </div>\n\n      <gf-form-switch class=\"gf-form\" label=\"Fill\" checked=\"threshold.fill\"\n                      on-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></gf-form-switch>\n\n      <div class=\"gf-form\" ng-if=\"threshold.fill && threshold.colorMode === 'custom'\">\n        <label class=\"gf-form-label\">Fill color</label>\n        <span class=\"gf-form-label\">\n          <spectrum-picker ng-model=\"threshold.fillColor\" ng-change=\"ctrl.render()\" ></spectrum-picker>\n        </span>\n      </div>\n\n      <gf-form-switch class=\"gf-form\" label=\"Line\" checked=\"threshold.line\"\n                      on-change=\"ctrl.render()\" ng-disabled=\"ctrl.disabled\"></gf-form-switch>\n\n      <div class=\"gf-form\" ng-if=\"threshold.line && threshold.colorMode === 'custom'\">\n        <label class=\"gf-form-label\">Line color</label>\n        <span class=\"gf-form-label\">\n          <spectrum-picker ng-model=\"threshold.lineColor\" ng-change=\"ctrl.render()\" ></spectrum-picker>\n        </span>\n      </div>\n\n      <div class=\"gf-form\">\n        <label class=\"gf-form-label\">\n          <a class=\"pointer\" ng-click=\"ctrl.removeThreshold($index)\" ng-disabled=\"ctrl.disabled\">\n            <i class=\"fa fa-trash\"></i>\n          </a>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"gf-form-button-row\">\n      <button class=\"btn btn-inverse\" ng-click=\"ctrl.addThreshold()\" ng-disabled=\"ctrl.disabled\">\n        <i class=\"fa fa-plus\"></i>&nbsp;Add Threshold\n      </button>\n    </div>\n  </div>\n</div>\n`;\n\ncoreModule.directive('graphThresholdForm', function() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: \"=\"\n    }\n  };\n});\n"]}