{"version":3,"sources":["../../src/threshold_manager.js"],"names":["$","_","ThresholdManager","panelCtrl","handleIndex","model","valueStr","stateClass","colorMode","evt","handleElem","currentTarget","parents","data","isMoving","lastY","posTop","plot","thresholds","dragging","clientY","diff","css","top","stopped","graphValue","c2p","left","y","parseInt","toFixed","value","valueCanvasPos","p2c","x","off","$scope","$apply","render","events","emit","threshold","position","on","placeholder","find","remove","needsCleanup","defaultHandleTopPos","handleTopPos","isNumber","Math","round","min","max","height","getHandleHtml","append","toggleClass","hasSecondYAxis","editingThresholds","panel","length","elem","i","yaxis","shouldDrawHandles","thresholdMargin","getPlaceholder","cleanUp","renderHandle","initDragging","bind","options","gtLimit","Infinity","ltLimit","other","limit","op","fillColor","lineColor","fill","grid","markings","push","from","to","color","line"],"mappings":"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","file":"threshold_manager.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport 'jquery.flot';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nexport class ThresholdManager {\n\n  constructor(panelCtrl) {}\n\n  getHandleHtml(handleIndex, model, valueStr) {\n    var stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n\n  }\n\n  initDragging(evt) {\n    var handleElem = $(evt.currentTarget).parents(\".alert-handle-wrapper\");\n    var handleIndex = $(evt.currentTarget).data(\"handleIndex\");\n\n    var isMoving = false;\n    var lastY = null;\n    var posTop;\n    var plot = this.plot;\n    var panelCtrl = this.panelCtrl;\n    var model = this.thresholds[handleIndex];\n\n    function dragging(evt) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        var diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({top: posTop + diff});\n      }\n    }\n\n    function stopped() {\n      isMoving = false;\n      // calculate graph level\n      var graphValue = plot.c2p({left: 0, top: posTop}).y;\n      graphValue = parseInt(graphValue.toFixed(0));\n      model.value = graphValue;\n\n      var valueCanvasPos = plot.p2c({x: 0, y: graphValue});\n\n      handleElem.off(\"mousemove\", dragging);\n      handleElem.off(\"mouseup\", dragging);\n      handleElem.off(\"mouseleave\", dragging);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(function() {\n        panelCtrl.render();\n        panelCtrl.events.emit('threshold-changed', {threshold: model, handleIndex: handleIndex});\n      });\n    }\n\n    isMoving = true;\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on(\"mousemove\", dragging);\n    handleElem.on(\"mouseup\", stopped);\n    handleElem.on(\"mouseleave\", stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find(\".alert-handle-wrapper\").remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex, defaultHandleTopPos) {\n    var model = this.thresholds[handleIndex];\n    var value = model.value;\n    var valueStr = value;\n    var handleTopPos = 0;\n\n    // handle no value\n    if (!_.isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      var valueCanvasPos = this.plot.p2c({x: 0, y: value});\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    var handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({top: handleTopPos});\n  }\n\n  shouldDrawHandles() {\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem, data) {\n    this.hasSecondYAxis = false;\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      var thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height-30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options, panel) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    var gtLimit = Infinity;\n    var ltLimit = -Infinity;\n    var i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!_.isNumber(threshold.value)) {\n        continue;\n      }\n\n      var limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i+1) {\n            other = panel.thresholds[i+1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i+1) {\n            other = panel.thresholds[i+1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      var fillColor, lineColor;\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        options.grid.markings.push({yaxis: {from: threshold.value, to: limit}, color: fillColor});\n      }\n      if (threshold.line) {\n        options.grid.markings.push({yaxis: {from: threshold.value, to: threshold.value}, color: lineColor});\n      }\n    }\n  }\n\n}\n\n"]}