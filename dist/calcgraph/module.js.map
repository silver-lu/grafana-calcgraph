{"version":3,"sources":["../../src/module.js"],"names":["template","angular","moment","_","TimeSeries","config","MetricsPanelCtrl","alertTab","DataProcessor","axesEditorComponent","panelDefaults","datasource","renderer","yaxes","label","show","logBase","min","max","format","xaxis","mode","name","values","buckets","lines","fill","linewidth","dashes","dashLength","spaceLength","points","pointradius","bars","stack","percentage","legend","current","total","avg","nullPointMode","steppedLine","tooltip","value_type","shared","sort","timeFrom","timeShift","targets","aliasColors","seriesOverrides","thresholds","GraphCtrl","$scope","$injector","annotationsSrv","hiddenSeries","seriesList","dataList","annotations","colors","defaults","panel","processor","events","on","onRender","bind","onDataReceived","onDataError","onDataSnapshotLoad","onInitEditMode","onInitPanelActions","addEditorTab","alertingEnabled","subTabIndex","actions","push","text","click","annotationsPromise","getAnnotations","dashboard","range","evt","publishAppEvent","snapshotData","err","render","getSeriesList","dataWarning","datapointsCount","reduce","prev","series","datapoints","length","title","tip","isOutsideRange","then","loading","alertState","result","applySeriesOverrides","unit","yaxis","color","alias","serie","event","ctrlKey","metaKey","shiftKey","toggleSeriesExclusiveMode","hidden","alreadyExclusive","every","value","each","info","override","find","without","refresh","scope","$new","templateHtml","modalClass"],"mappings":"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","file":"module.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport './graph';\nimport './legend';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\n\nimport template from './template';\nimport angular from 'angular';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport config from 'app/core/config';\nimport {MetricsPanelCtrl, alertTab} from 'app/plugins/sdk';\nimport {DataProcessor} from './data_processor';\nimport {axesEditorComponent} from './axes_editor';\n\nconst panelDefaults = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short'\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short'\n      }\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null\n    },\n    // show/hide lines\n    lines         : true,\n    // fill factor\n    fill          : 1,\n    // line width in pixels\n    linewidth     : 1,\n    // show/hide dashed line\n    dashes        : false,\n    // length of a dash\n    dashLength    : 10,\n    // length of space between two dashes\n    spaceLength   : 10,\n    // show hide points\n    points        : false,\n    // point radius in pixels\n    pointradius   : 5,\n    // show hide bars\n    bars          : false,\n    // enable/disable stacking\n    stack         : false,\n    // stack percentage mode\n    percentage    : false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false\n    },\n    // how null points should be handled\n    nullPointMode : 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip       : {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n  };\n\nclass GraphCtrl extends MetricsPanelCtrl {\n\n\n  /** @ngInject */\n  constructor($scope, $injector, annotationsSrv) {\n    super($scope, $injector);\n\n    this.template = template;\n\n    this.hiddenSeries = {};\n    this.seriesList = [];\n    this.dataList = [];\n    this.annotations = [];\n    this.colors = [];\n\n    _.defaults(this.panel, this.panelDefaults);\n    _.defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    _.defaults(this.panel.legend, this.panelDefaults.legend);\n    _.defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n\n    this.processor = new DataProcessor(this.panel);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Axes', axesEditorComponent, 2);\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html', 3);\n    this.addEditorTab('Display', 'public/app/plugins/panel/graph/tab_display.html', 4);\n\n    if (config.alertingEnabled) {\n      this.addEditorTab('Alert', alertTab, 5);\n    }\n\n    this.subTabIndex = 0;\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({text: 'Export CSV', click: 'ctrl.exportCsv()'});\n    actions.push({text: 'Toggle legend', click: 'ctrl.toggleLegend()'});\n  }\n\n  issueQueries(datasource) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n    return super.issueQueries(datasource);\n  }\n\n  zoomOut(evt) {\n    this.publishAppEvent('zoom-out', 2);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.annotations = [];\n    this.render([]);\n  }\n\n  onDataReceived(dataList) {\n    this.dataList = dataList;\n    this.seriesList = this.processor.getSeriesList({dataList: dataList, range: this.range});\n\n    this.dataWarning = null;\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      this.dataWarning = {\n        title: 'No data points',\n        tip: 'No datapoints returned from data query'\n      };\n    } else {\n\n      for (let series of this.seriesList) {\n        if (series.isOutsideRange) {\n          this.dataWarning = {\n            title: 'Data points outside time range',\n            tip: 'Can be caused by timezone mismatch or missing time filter in query',\n          };\n          break;\n        }\n      }\n    }\n\n    this.annotationsPromise.then(result => {\n      this.loading = false;\n      this.alertState = result.alertState;\n      this.annotations = result.annotations;\n      this.render(this.seriesList);\n    }, () => {\n      this.loading = false;\n      this.render(this.seriesList);\n    });\n  }\n\n  onRender() {\n    if (!this.seriesList) { return; }\n\n    for (let series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis-1].format = series.unit;\n      }\n    }\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  toggleSeries(serie, event) {\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (this.hiddenSeries[serie.alias]) {\n        delete this.hiddenSeries[serie.alias];\n      } else {\n        this.hiddenSeries[serie.alias] = true;\n      }\n    } else {\n      this.toggleSeriesExclusiveMode(serie);\n    }\n    this.render();\n  }\n\n  toggleSeriesExclusiveMode (serie) {\n    var hidden = this.hiddenSeries;\n\n    if (hidden[serie.alias]) {\n      delete hidden[serie.alias];\n    }\n\n    // check if every other series is hidden\n    var alreadyExclusive = _.every(this.seriesList, value => {\n      if (value.alias === serie.alias) {\n        return true;\n      }\n\n      return hidden[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      _.each(this.seriesList, value => {\n        delete this.hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      _.each(this.seriesList, value => {\n        if (value.alias === serie.alias) {\n          return;\n        }\n\n        this.hiddenSeries[value.alias] = true;\n      });\n    }\n  }\n\n  toggleAxis(info) {\n    var override = _.find(this.panel.seriesOverrides, {alias: info.alias});\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    info.yaxis = override.yaxis = info.yaxis === 2 ? 1 : 2;\n    this.render();\n  }\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.refresh();\n  }\n\n  legendValuesOptionChanged() {\n    var legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  exportCsv() {\n    var scope = this.$scope.$new(true);\n    scope.seriesList = this.seriesList;\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal data=\"seriesList\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow'\n    });\n  }\n}\n\nexport {GraphCtrl, GraphCtrl as PanelCtrl};\n"]}