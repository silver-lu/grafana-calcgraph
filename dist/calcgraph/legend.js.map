{"version":3,"sources":["../../src/legend.js"],"names":["define","angular","_","$","module","directive","popoverSrv","$timeout","link","scope","elem","$container","firstRender","ctrl","panel","data","seriesList","i","events","on","render","getSeriesIndexForElement","el","parents","openColorSelector","e","target","length","currentTarget","find","index","series","show","element","position","template","openOn","model","toggleAxis","colorSelected","color","changeSeriesColor","toggleSeries","seriesInfo","scrollPosition","children","scrollTop","sortLegend","stat","legend","sort","sortDesc","getTableHeaderHtml","statName","html","cssClass","empty","append","width","rightSide","sideWidth","css","toggleClass","alignAsTable","tableHeaderElem","header","values","sortBy","stats","reverse","seriesShown","seriesElements","hideFromLegend","yaxis","hiddenSeries","alias","escape","label","avg","formatValue","current","min","max","total","push","maxHeight","height","topPadding","tbodyElem"],"mappings":"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","file":"legend.js","sourcesContent":["define([\n  'angular',\n  'lodash',\n  'jquery',\n  'jquery.flot',\n  'jquery.flot.time',\n],\nfunction (angular, _, $) {\n  'use strict';\n\n  var module = angular.module('grafana.directives');\n\n  module.directive('graphLegend', function(popoverSrv, $timeout) {\n\n    return {\n      link: function(scope, elem) {\n        var $container = $('<section class=\"graph-legend\"></section>');\n        var firstRender = true;\n        var ctrl = scope.ctrl;\n        var panel = ctrl.panel;\n        var data;\n        var seriesList;\n        var i;\n\n        ctrl.events.on('render', function() {\n          data = ctrl.seriesList;\n          if (data) {\n            render();\n          }\n        });\n\n        function getSeriesIndexForElement(el) {\n          return el.parents('[data-series-index]').data('series-index');\n        }\n\n        function openColorSelector(e) {\n          // if we clicked inside poup container ignore click\n          if ($(e.target).parents('.popover').length) {\n            return;\n          }\n\n          var el = $(e.currentTarget).find('.fa-minus');\n          var index = getSeriesIndexForElement(el);\n          var series = seriesList[index];\n\n          $timeout(function() {\n            popoverSrv.show({\n              element: el[0],\n              position: 'bottom center',\n              template: '<gf-color-picker></gf-color-picker>',\n              openOn: 'hover',\n              model: {\n                series: series,\n                toggleAxis: function() {\n                  ctrl.toggleAxis(series);\n                },\n                colorSelected: function(color) {\n                  ctrl.changeSeriesColor(series, color);\n                }\n              },\n            });\n          });\n        }\n\n        function toggleSeries(e) {\n          var el = $(e.currentTarget);\n          var index = getSeriesIndexForElement(el);\n          var seriesInfo = seriesList[index];\n          var scrollPosition = $($container.children('tbody')).scrollTop();\n          ctrl.toggleSeries(seriesInfo, e);\n          $($container.children('tbody')).scrollTop(scrollPosition);\n        }\n\n        function sortLegend(e) {\n          var el = $(e.currentTarget);\n          var stat = el.data('stat');\n\n          if (stat !== panel.legend.sort) { panel.legend.sortDesc = null; }\n\n          // if already sort ascending, disable sorting\n          if (panel.legend.sortDesc === false) {\n            panel.legend.sort = null;\n            panel.legend.sortDesc = null;\n            render();\n            return;\n          }\n\n          panel.legend.sortDesc = !panel.legend.sortDesc;\n          panel.legend.sort = stat;\n          render();\n        }\n\n        function getTableHeaderHtml(statName) {\n          if (!panel.legend[statName]) { return \"\"; }\n          var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + statName;\n\n          if (panel.legend.sort === statName) {\n            var cssClass = panel.legend.sortDesc ? 'fa fa-caret-down' : 'fa fa-caret-up' ;\n            html += ' <span class=\"' + cssClass + '\"></span>';\n          }\n\n          return html + '</th>';\n        }\n\n        function render() {\n          if (!ctrl.panel.legend.show) {\n            elem.empty();\n            firstRender = true;\n            return;\n          }\n\n          if (firstRender) {\n            elem.append($container);\n            $container.on('click', '.graph-legend-icon', openColorSelector);\n            $container.on('click', '.graph-legend-alias', toggleSeries);\n            $container.on('click', 'th', sortLegend);\n            firstRender = false;\n          }\n\n          seriesList = data;\n\n          $container.empty();\n\n          // Set min-width if side style and there is a value, otherwise remove the CSS propery\n          var width = panel.legend.rightSide && panel.legend.sideWidth ? panel.legend.sideWidth + \"px\" : \"\";\n          $container.css(\"min-width\", width);\n\n          $container.toggleClass('graph-legend-table', panel.legend.alignAsTable === true);\n\n          var tableHeaderElem;\n          if (panel.legend.alignAsTable) {\n            var header = '<tr>';\n            header += '<th colspan=\"2\" style=\"text-align:left\"></th>';\n            if (panel.legend.values) {\n              header += getTableHeaderHtml('min');\n              header += getTableHeaderHtml('max');\n              header += getTableHeaderHtml('avg');\n              header += getTableHeaderHtml('current');\n              header += getTableHeaderHtml('total');\n            }\n            header += '</tr>';\n            tableHeaderElem = $(header);\n          }\n\n          if (panel.legend.sort) {\n            seriesList = _.sortBy(seriesList, function(series) {\n              return series.stats[panel.legend.sort];\n            });\n            if (panel.legend.sortDesc) {\n              seriesList = seriesList.reverse();\n            }\n          }\n\n          var seriesShown = 0;\n          var seriesElements = [];\n\n          for (i = 0; i < seriesList.length; i++) {\n            var series = seriesList[i];\n\n            if (series.hideFromLegend(panel.legend)) {\n              continue;\n            }\n\n            var html = '<div class=\"graph-legend-series';\n\n            if (series.yaxis === 2) { html += ' graph-legend-series--right-y'; }\n            if (ctrl.hiddenSeries[series.alias]) { html += ' graph-legend-series-hidden'; }\n            html += '\" data-series-index=\"' + i + '\">';\n            html += '<div class=\"graph-legend-icon\">';\n            html += '<i class=\"fa fa-minus pointer\" style=\"color:' + series.color + '\"></i>';\n            html += '</div>';\n\n            html += '<a class=\"graph-legend-alias pointer\" title=\"' + _.escape(series.label) + '\">' + _.escape(series.label) + '</a>';\n\n            if (panel.legend.values) {\n              var avg = series.formatValue(series.stats.avg);\n              var current = series.formatValue(series.stats.current);\n              var min = series.formatValue(series.stats.min);\n              var max = series.formatValue(series.stats.max);\n              var total = series.formatValue(series.stats.total);\n\n              if (panel.legend.min) { html += '<div class=\"graph-legend-value min\">' + min + '</div>'; }\n              if (panel.legend.max) { html += '<div class=\"graph-legend-value max\">' + max + '</div>'; }\n              if (panel.legend.avg) { html += '<div class=\"graph-legend-value avg\">' + avg + '</div>'; }\n              if (panel.legend.current) { html += '<div class=\"graph-legend-value current\">' + current + '</div>'; }\n              if (panel.legend.total) { html += '<div class=\"graph-legend-value total\">' + total + '</div>'; }\n            }\n\n            html += '</div>';\n            seriesElements.push($(html));\n\n            seriesShown++;\n          }\n\n          if (panel.legend.alignAsTable) {\n            var maxHeight = ctrl.height;\n\n            if (!panel.legend.rightSide) {\n              maxHeight = maxHeight/2;\n            }\n\n            var topPadding = 6;\n            var tbodyElem = $('<tbody></tbody>');\n            tbodyElem.css(\"max-height\", maxHeight - topPadding);\n            tbodyElem.append(tableHeaderElem);\n            tbodyElem.append(seriesElements);\n            $container.append(tbodyElem);\n          } else {\n            $container.append(seriesElements);\n          }\n        }\n      }\n    };\n  });\n\n});\n"]}